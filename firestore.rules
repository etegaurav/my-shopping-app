// Firestore Security Rules
// Deploy these rules to your Firebase project using: firebase deploy --only firestore:rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Shared lists - more restrictive rules
    match /shared_lists/{listId} {
      // Allow read if user is authenticated and is a collaborator
      allow read: if request.auth != null && 
                     request.auth.uid in resource.data.collaborators;
      
      // Allow write if user is authenticated and is a collaborator
      allow write: if request.auth != null && 
                      request.auth.uid in resource.data.collaborators;
      
      // Allow creation if user is authenticated
      allow create: if request.auth != null && 
                       request.auth.uid in request.resource.data.collaborators;
      
      // Allow deletion only by the creator
      allow delete: if request.auth != null && 
                       request.auth.uid == resource.data.createdBy;
    }
    
    // Alternative rules if you don't want to use Firebase Auth:
    // WARNING: These are less secure but work without authentication
    /*
    match /users/{userId} {
      // Allow access but validate user owns the document
      allow read, write: if userId == request.resource.data.userId || 
                            userId == resource.data.userId;
    }
    
    match /shared_lists/{listId} {
      // Allow read/write to any document
      // Add your own validation logic here
      allow read, write: if true;
    }
    */
  }
}